//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace PatrolControl.UI.PatrolControlServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Building", Namespace="http://schemas.datacontract.org/2004/07/PatrolControl.Service.Model")]
    public partial class Building : PatrolControl.UI.PatrolControlServiceReference.Entity {
        
        private PatrolControl.UI.PatrolControlServiceReference.DbGeography GeographyField;
        
        private string NumberField;
        
        private int StreetIdField;
        
        private long TagsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PatrolControl.UI.PatrolControlServiceReference.DbGeography Geography {
            get {
                return this.GeographyField;
            }
            set {
                if ((object.ReferenceEquals(this.GeographyField, value) != true)) {
                    this.GeographyField = value;
                    this.RaisePropertyChanged("Geography");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StreetId {
            get {
                return this.StreetIdField;
            }
            set {
                if ((this.StreetIdField.Equals(value) != true)) {
                    this.StreetIdField = value;
                    this.RaisePropertyChanged("StreetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((this.TagsField.Equals(value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Entity", Namespace="http://schemas.datacontract.org/2004/07/PatrolControl.Service.Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PatrolControl.UI.PatrolControlServiceReference.Building))]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbGeography", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Spatial")]
    public partial class DbGeography : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PatrolControl.UI.PatrolControlServiceReference.DbGeographyWellKnownValue GeographyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PatrolControl.UI.PatrolControlServiceReference.DbGeographyWellKnownValue Geography {
            get {
                return this.GeographyField;
            }
            set {
                if ((object.ReferenceEquals(this.GeographyField, value) != true)) {
                    this.GeographyField = value;
                    this.RaisePropertyChanged("Geography");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbGeographyWellKnownValue", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Spatial")]
    public partial class DbGeographyWellKnownValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CoordinateSystemIdField;
        
        private string WellKnownTextField;
        
        private byte[] WellKnownBinaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public int CoordinateSystemId {
            get {
                return this.CoordinateSystemIdField;
            }
            set {
                if ((this.CoordinateSystemIdField.Equals(value) != true)) {
                    this.CoordinateSystemIdField = value;
                    this.RaisePropertyChanged("CoordinateSystemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string WellKnownText {
            get {
                return this.WellKnownTextField;
            }
            set {
                if ((object.ReferenceEquals(this.WellKnownTextField, value) != true)) {
                    this.WellKnownTextField = value;
                    this.RaisePropertyChanged("WellKnownText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] WellKnownBinary {
            get {
                return this.WellKnownBinaryField;
            }
            set {
                if ((object.ReferenceEquals(this.WellKnownBinaryField, value) != true)) {
                    this.WellKnownBinaryField = value;
                    this.RaisePropertyChanged("WellKnownBinary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PatrolControlServiceReference.IPatrolControlService")]
    public interface IPatrolControlService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPatrolControlService/GetBuildings", ReplyAction="http://tempuri.org/IPatrolControlService/GetBuildingsResponse")]
        System.IAsyncResult BeginGetBuildings(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> EndGetBuildings(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatrolControlServiceChannel : PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBuildingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBuildingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatrolControlServiceClient : System.ServiceModel.ClientBase<PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService>, PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService {
        
        private BeginOperationDelegate onBeginGetBuildingsDelegate;
        
        private EndOperationDelegate onEndGetBuildingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBuildingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PatrolControlServiceClient() {
        }
        
        public PatrolControlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatrolControlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatrolControlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatrolControlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetBuildingsCompletedEventArgs> GetBuildingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService.BeginGetBuildings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBuildings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService.EndGetBuildings(System.IAsyncResult result) {
            return base.Channel.EndGetBuildings(result);
        }
        
        private System.IAsyncResult OnBeginGetBuildings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService)(this)).BeginGetBuildings(callback, asyncState);
        }
        
        private object[] OnEndGetBuildings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> retVal = ((PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService)(this)).EndGetBuildings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBuildingsCompleted(object state) {
            if ((this.GetBuildingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBuildingsCompleted(this, new GetBuildingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBuildingsAsync() {
            this.GetBuildingsAsync(null);
        }
        
        public void GetBuildingsAsync(object userState) {
            if ((this.onBeginGetBuildingsDelegate == null)) {
                this.onBeginGetBuildingsDelegate = new BeginOperationDelegate(this.OnBeginGetBuildings);
            }
            if ((this.onEndGetBuildingsDelegate == null)) {
                this.onEndGetBuildingsDelegate = new EndOperationDelegate(this.OnEndGetBuildings);
            }
            if ((this.onGetBuildingsCompletedDelegate == null)) {
                this.onGetBuildingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBuildingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBuildingsDelegate, null, this.onEndGetBuildingsDelegate, this.onGetBuildingsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService CreateChannel() {
            return new PatrolControlServiceClientChannel(this);
        }
        
        private class PatrolControlServiceClientChannel : ChannelBase<PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService>, PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService {
            
            public PatrolControlServiceClientChannel(System.ServiceModel.ClientBase<PatrolControl.UI.PatrolControlServiceReference.IPatrolControlService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetBuildings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBuildings", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> EndGetBuildings(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building> _result = ((System.Collections.ObjectModel.ObservableCollection<PatrolControl.UI.PatrolControlServiceReference.Building>)(base.EndInvoke("GetBuildings", _args, result)));
                return _result;
            }
        }
    }
}
